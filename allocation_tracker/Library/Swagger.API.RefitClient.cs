
// ReSharper disable InconsistentNaming
// ReSharper disable IdentifierTypo
using Refit;

namespace Library;

// ReSharper disable StringLiteralTypo
public interface IAllocationTrackerRefitClient
{
    [Get("/allocationtracker/allocations")]
    Task<IApiResponse<ApiResult_AllocationV2>> Allocations(
        [Query(CollectionFormat.Multi)] IEnumerable<string> custSupplierId,
        [Query(CollectionFormat.Multi)] IEnumerable<string> custTerminalId,
        [Query(CollectionFormat.Multi)] IEnumerable<string> custProductId,
        [Query(CollectionFormat.Multi)] IEnumerable<long> supplierId,
        [Query(CollectionFormat.Multi)] IEnumerable<long> terminalId,
        [Query(CollectionFormat.Multi)] IEnumerable<long> productId,
        [Query(CollectionFormat.Multi)] IEnumerable<string> atSellerNum,
        [Query(CollectionFormat.Multi)] IEnumerable<string> atTerminal,
        [Query(CollectionFormat.Multi)] IEnumerable<string> atTerminalGroup,
        [Query(CollectionFormat.Multi)] IEnumerable<string> atProductCode,
        [Query(CollectionFormat.Multi)] IEnumerable<string> atProductGroup,
        [Query(CollectionFormat.Multi)] IEnumerable<string> atProductFamily,
        [Query(CollectionFormat.Multi)] string includeRackData,
        [Query(CollectionFormat.Multi)] string page,
        [Query(CollectionFormat.Multi)] int? pageSize,
        [Header("Accept")] string accept,
        [Header("webservicekey")] string webservicekey,
        [Header("apikey")] string apikey,
        [Header("username")] string username
    );

    [Get("/allocationtracker/suppliers")]
    Task<IApiResponse<ApiResult_Supplier>> Suppliers(
        [Header("Accept")] string accept,
        [Header("webservicekey")] string webservicekey,
        [Header("apikey")] string apikey,
        [Header("username")] string username
    );

    [Get("/allocationtracker/suppliers/{sellerNumber}/locations")]
    Task<IApiResponse<ApiResult_Location>> Locations(
        string sellerNumber,
        [Header("Accept")] string accept,
        [Header("webservicekey")] string webservicekey,
        [Header("apikey")] string apikey,
        [Header("username")] string username
    );

    [Get("/allocationtracker/suppliers/{sellerNumber}/locations/thirdParty/{alternateId}/allocationProducts")]
    Task<IApiResponse<ApiResult_AllocationProduct>> ThirdPartyAllocationProducts(
        string sellerNumber,
        string alternateId,
        [Header("Accept")] string accept,
        [Header("webservicekey")] string webservicekey,
        [Header("apikey")] string apikey,
        [Header("username")] string username
    );

    [Get("/allocationtracker/suppliers/{sellerNumber}/locations/{locationId}/allocationProducts")]
    Task<IApiResponse<ApiResult_AllocationProduct>> AllocationProducts(
        string sellerNumber,
        int locationId,
        [Header("Accept")] string accept,
        [Header("webservicekey")] string webservicekey,
        [Header("apikey")] string apikey,
        [Header("username")] string username
    );

    [Get("/allocationtracker/suppliers/{sellerNumber}/productFamilies/{id}/products")]
    Task<IApiResponse<ApiResult_Product>> ProductsInProductFamily(
        string sellerNumber,
        int id,
        [Header("Accept")] string accept,
        [Header("webservicekey")] string webservicekey,
        [Header("apikey")] string apikey,
        [Header("username")] string username
    );

    [Get("/allocationtracker/suppliers/{sellerNumber}/productGroups/{id}/products")]
    Task<IApiResponse<ApiResult_Product>> ProductsInProductGroup(
        string sellerNumber,
        int id,
        [Header("Accept")] string accept,
        [Header("webservicekey")] string webservicekey,
        [Header("apikey")] string apikey,
        [Header("username")] string username
    );

    [Get("/allocationtracker/suppliers/{sellerNumber}/terminalGroups/{id}/terminals")]
    Task<IApiResponse<ApiResult_Terminal>> TerminalsInTerminalGroup(
        string sellerNumber,
        int id,
        [Header("Accept")] string accept,
        [Header("webservicekey")] string webservicekey,
        [Header("apikey")] string apikey,
        [Header("username")] string username
    );
}

//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class AllocationProduct
{
    [System.Text.Json.Serialization.JsonPropertyName("product")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public Product Product { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("productFamily")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public ProductFamily ProductFamily { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("productGroup")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public ProductGroup ProductGroup { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class AllocationV2
{
    [System.Text.Json.Serialization.JsonPropertyName("authOption")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string AuthOption { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("contract")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public bool? Contract { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("customer")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public Customer Customer { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("isChannelLevel")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public bool? IsChannelLevel { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("isDaylightSavings")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public bool? IsDaylightSavings { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("location")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public LocationV2 Location { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("productAllocationList")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public ICollection<ProductAllocationV2> ProductAllocationList { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("retrievalDate")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string RetrievalDate { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("supplier")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public Supplier Supplier { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("timeZone")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string TimeZone { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("truckHoldAmount")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public long? TruckHoldAmount { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("type")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
    public AllocationV2Type? Type { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class ApiResult_AllocationProduct
{
    [System.Text.Json.Serialization.JsonPropertyName("data")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public ICollection<AllocationProduct> Data { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("meta")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public Meta Meta { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class ApiResult_AllocationV2
{
    [System.Text.Json.Serialization.JsonPropertyName("data")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public ICollection<AllocationV2> Data { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("meta")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public Meta Meta { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class ApiResult_Location
{
    [System.Text.Json.Serialization.JsonPropertyName("data")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public ICollection<Location> Data { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("meta")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public Meta Meta { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class ApiResult_Product
{
    [System.Text.Json.Serialization.JsonPropertyName("data")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public ICollection<Product> Data { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("meta")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public Meta Meta { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class ApiResult_Supplier
{
    [System.Text.Json.Serialization.JsonPropertyName("data")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public ICollection<Supplier> Data { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("meta")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public Meta Meta { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class ApiResult_Terminal
{
    [System.Text.Json.Serialization.JsonPropertyName("data")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public ICollection<Terminal> Data { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("meta")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public Meta Meta { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class Channel
{
    [System.Text.Json.Serialization.JsonPropertyName("abbreviation")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Abbreviation { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("erpId")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string ErpId { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("id")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public long? Id { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("name")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Name { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class Consignee
{
    [System.Text.Json.Serialization.JsonPropertyName("channel")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public Channel Channel { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("consigneeName")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string ConsigneeName { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("consigneeNum")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string ConsigneeNum { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("soldTo")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public SoldTo SoldTo { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class ConsigneeGroup
{
    [System.Text.Json.Serialization.JsonPropertyName("channel")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public Channel Channel { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("id")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public int? Id { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("name")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Name { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("soldTo")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public SoldTo SoldTo { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class Customer
{
    [System.Text.Json.Serialization.JsonPropertyName("consignee")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public Consignee Consignee { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("consigneeGroup")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public ConsigneeGroup ConsigneeGroup { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class GpoRequest
{
    [System.Text.Json.Serialization.JsonPropertyName("amountRequested")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? AmountRequested { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("authorizedAmount")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public int? AuthorizedAmount { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("productAllocationId")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public long? ProductAllocationId { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("requestEmail")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string RequestEmail { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("requestId")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public long? RequestId { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("requestPhone")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string RequestPhone { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("requestedExpirationDate")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string RequestedExpirationDate { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("requesterComments")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string RequesterComments { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("status")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Status { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class Location
{
    [System.Text.Json.Serialization.JsonPropertyName("terminal")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public Terminal Terminal { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("terminalGroup")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public TerminalGroup TerminalGroup { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class LocationV2
{
    [System.Text.Json.Serialization.JsonPropertyName("terminal")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public TerminalV2 Terminal { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("terminalGroup")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public TerminalGroup TerminalGroup { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class MadeLink
{
    [System.Text.Json.Serialization.JsonPropertyName("href")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Href { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("method")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Method { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("rel")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Rel { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class Meta
{
    [System.Text.Json.Serialization.JsonPropertyName("dateTime")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string DateTime { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("eventUUID")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string EventUUID { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("executionTime")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public int? ExecutionTime { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("formattedUserDate")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string FormattedUserDate { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("name")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Name { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("pageDetails")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public PageDetails PageDetails { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("type")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Type { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class PageDetails
{
    [System.Text.Json.Serialization.JsonPropertyName("nextUrl")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string NextUrl { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("page")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public int? Page { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("pageSize")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public int? PageSize { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("previousUrl")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string PreviousUrl { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("totalPageCount")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public int? TotalPageCount { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("totalResultCount")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public int? TotalResultCount { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class Product
{
    [System.Text.Json.Serialization.JsonPropertyName("code")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Code { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("description")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Description { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("mappedName")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string MappedName { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class ProductAllocationV2
{
    [System.Text.Json.Serialization.JsonPropertyName("addGpoAllowed")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public bool? AddGpoAllowed { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("addLoadAllowed")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public bool? AddLoadAllowed { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("allocationProduct")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public AllocationProduct AllocationProduct { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("allocationRemainingAmountCustom")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? AllocationRemainingAmountCustom { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("allocationRemainingAmountDaily")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? AllocationRemainingAmountDaily { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("allocationRemainingAmountMonthly")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? AllocationRemainingAmountMonthly { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("allocationRemainingAmountTriMonthly")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? AllocationRemainingAmountTriMonthly { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("allocationRemainingAmountWeekly")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? AllocationRemainingAmountWeekly { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("allocationType")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string AllocationType { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("categoryStatusCustom")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string CategoryStatusCustom { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("categoryStatusDaily")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string CategoryStatusDaily { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("categoryStatusMonthly")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string CategoryStatusMonthly { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("categoryStatusTriMonthly")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string CategoryStatusTriMonthly { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("categoryStatusWeekly")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string CategoryStatusWeekly { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("gpoAllowedAmount")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? GpoAllowedAmount { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("gpoEffectiveDateTime")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string GpoEffectiveDateTime { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("gpoLiftedAmount")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? GpoLiftedAmount { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("gpoRemainingAmount")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? GpoRemainingAmount { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("gpoRequest")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public GpoRequest GpoRequest { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("id")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public int? Id { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("liftedAmountCustom")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? LiftedAmountCustom { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("liftedAmountDaily")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? LiftedAmountDaily { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("liftedAmountMonthly")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? LiftedAmountMonthly { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("liftedAmountTriMonthly")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? LiftedAmountTriMonthly { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("liftedAmountWeekly")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? LiftedAmountWeekly { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("name")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Name { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("productRefreshPeriodListStartDateCustom")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string ProductRefreshPeriodListStartDateCustom { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("productRefreshPeriodListStartDateDaily")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string ProductRefreshPeriodListStartDateDaily { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("productRefreshPeriodListStartDateMonthly")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string ProductRefreshPeriodListStartDateMonthly { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("productRefreshPeriodListStartDateTriMonthly")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string ProductRefreshPeriodListStartDateTriMonthly { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("rackDataId")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public RackDataId RackDataId { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("refreshAmountCustom")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? RefreshAmountCustom { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("refreshAmountDaily")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? RefreshAmountDaily { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("refreshAmountMonthly")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? RefreshAmountMonthly { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("refreshAmountTriMonthly")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? RefreshAmountTriMonthly { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("refreshAmountWeekly")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? RefreshAmountWeekly { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("refreshDateCustom")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string RefreshDateCustom { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("refreshDateCustomDays")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public int? RefreshDateCustomDays { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("refreshDateDaily")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string RefreshDateDaily { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("refreshDateMonthly")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string RefreshDateMonthly { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("refreshDateTriMonthly")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string RefreshDateTriMonthly { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("refreshDateWeekly")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string RefreshDateWeekly { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("scaledStartAmountCustom")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? ScaledStartAmountCustom { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("scaledStartAmountDaily")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? ScaledStartAmountDaily { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("scaledStartAmountMonthly")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? ScaledStartAmountMonthly { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("scaledStartAmountTriMonthly")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? ScaledStartAmountTriMonthly { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("scaledStartAmountWeekly")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? ScaledStartAmountWeekly { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("startAmountCustom")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? StartAmountCustom { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("startAmountDaily")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? StartAmountDaily { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("startAmountMonthly")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? StartAmountMonthly { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("startAmountTriMonthly")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? StartAmountTriMonthly { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("startAmountWeekly")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public double? StartAmountWeekly { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("summaryStatus")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string SummaryStatus { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("unitOfMeasure")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string UnitOfMeasure { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class ProductFamily
{
    [System.Text.Json.Serialization.JsonPropertyName("id")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public int? Id { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("mappedName")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string MappedName { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("name")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Name { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("productListLink")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public MadeLink ProductListLink { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class ProductGroup
{
    [System.Text.Json.Serialization.JsonPropertyName("id")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public int? Id { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("mappedName")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string MappedName { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("name")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Name { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("productListLink")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public MadeLink ProductListLink { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class RackDataId
{
    [System.Text.Json.Serialization.JsonPropertyName("rackPartner")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public RackPartner RackPartner { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("rackSupplier")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public RackSupplier RackSupplier { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("rackTerminalProducts")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public ICollection<RackTerminalProductId> RackTerminalProducts { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class RackPartner
{
    [System.Text.Json.Serialization.JsonPropertyName("id")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public long? Id { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("name")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Name { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class RackProduct
{
    [System.Text.Json.Serialization.JsonPropertyName("id")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public long? Id { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("name")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Name { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("productLink")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public MadeLink ProductLink { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("xref")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Xref { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class RackSupplier
{
    [System.Text.Json.Serialization.JsonPropertyName("id")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public long? Id { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("name")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Name { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("supplierLink")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public MadeLink SupplierLink { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("xref")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Xref { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class RackTerminal
{
    [System.Text.Json.Serialization.JsonPropertyName("id")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public long? Id { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("name")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Name { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("terminalLink")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public MadeLink TerminalLink { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("xref")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Xref { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class RackTerminalProductId
{
    [System.Text.Json.Serialization.JsonPropertyName("rackProduct")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public RackProduct RackProduct { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("rackTerminal")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public RackTerminal RackTerminal { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class SoldTo
{
    [System.Text.Json.Serialization.JsonPropertyName("erpId")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string ErpId { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("id")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public long? Id { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("name")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Name { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class Supplier
{
    [System.Text.Json.Serialization.JsonPropertyName("name")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Name { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("sellerNum")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string SellerNum { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class Terminal
{
    [System.Text.Json.Serialization.JsonPropertyName("country")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Country { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("id")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public int? Id { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("mappedName")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string MappedName { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("name")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Name { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("owner")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Owner { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("plantId")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string PlantId { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("splc")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Splc { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("tcn")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Tcn { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class TerminalGroup
{
    [System.Text.Json.Serialization.JsonPropertyName("id")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public int? Id { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("mappedName")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string MappedName { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("name")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Name { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("terminalListLink")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public MadeLink TerminalListLink { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public partial class TerminalV2
{
    [System.Text.Json.Serialization.JsonPropertyName("alternateId")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string AlternateId { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("country")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Country { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("id")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public int? Id { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("mappedName")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string MappedName { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("name")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Name { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("owner")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Owner { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("plantId")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string PlantId { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("splc")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Splc { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("status")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Status { get; set; }

    [System.Text.Json.Serialization.JsonPropertyName("tcn")]
    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
    public string Tcn { get; set; }
}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
public enum AllocationV2Type
{
    [System.Runtime.Serialization.EnumMember(Value = @"TABS")]
    TABS = 0,

    [System.Runtime.Serialization.EnumMember(Value = @"THIRD_PARTY")]
    THIRD_PARTY = 1
}

#pragma warning restore  108
#pragma warning restore  114
#pragma warning restore  472
#pragma warning restore  612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8603